<launch>
  <!-- Required Arguments -->
  <arg name="environment" />

  <!-- Load in the config -->
  <rosparam command="load" file="$(find ma_loam)/config/config.yaml" />

  <!-- Default arguments for gazebo -->
  <arg name="debug" default="false" />
  <arg name="gui" default="false" />
  <arg name="pause" default="false" />
  <arg name="world" default="$(find ma_loam)/resources/environments/$(arg environment)/$(arg environment).world" />
  <rosparam param="environment_name" subst_value="true">$(arg environment)</rosparam>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- Arguments  -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg pause)" />
    <arg name="world_name" value="$(arg world)" />

    <!-- Properties -->
    <arg name="recording" value="false" />
    <arg name="use_sim_time" value="true" />
  </include>

  <!-- Sensor name and pose -->
  <arg name="sensor_name" default="vlp_16" />
  <arg name="sensor_pose" default="[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]" />
  <rosparam param="sensor_pose_init" subst_value="true">$(arg sensor_pose)</rosparam>

  <!-- Load in the sensor -->
  <arg name="gpu" default="false" />
  <arg name="organize_cloud" default="false" />
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ma_loam)/resources/urdf/$(arg sensor_name).xacro' organize_cloud:=$(arg organize_cloud) gpu:=$(arg gpu)" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" args="-urdf -param /robot_description -model $(arg sensor_name)" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="10.0" />
  </node>

  <!-- Set the default pose of the sensor at the start of the simulation. Publish to /cmd_vel later for complete twist -->
  <node name="model_state_node" pkg="ma_loam" type="set_model_state.py" args="--name $(arg sensor_name)" output="screen" />

  <!-- Load the sensor params to ROS param server -->
  <param name="sensor_name" type="string" value="$(arg sensor_name)" />

  <!-- Load the sensor TF publisher -->
  <node name="sensor_tf_node" pkg="ma_loam" type="tf_sensor.py" output="screen" />

  <!-- Load rviz -->
  <arg name="rviz" default="true" />
  <node if="$(arg rviz)" type="rviz" name="$(anon rviz)" pkg="rviz" respawn="false" output="screen" args="-d $(find ma_loam)/rviz/config.rviz" />

  <!-- Publish transform between world and camera init(part of a-loam) -->
  <node pkg="tf" type="static_transform_publisher" name="sensor" args="0 0 0 0 0 0 1 /world /camera_init  100" />

  <!-- Load the CICP node -->
  <node name="cluster_icp_node" pkg="ma_loam" type="ma_loam_runner" output="screen" />

</launch>